buildscript {
    ext.kotlin_version = '1.2.30'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
    }
}

allprojects {
    group 'org.getchunky'
    version '0.1.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    // apply plugin: 'net.minecrell.licenser'
    apply plugin: 'kotlin'

    repositories {
        mavenCentral()
        maven { url "https://hub.spigotmc.org/nexus/content/groups/public/" }
    }

    dependencies {
        compile 'org.jetbrains:annotations:15.0'
        compileOnly group: "org.bukkit", name: "bukkit", version: "1.12.2-R0.1-SNAPSHOT"

        testCompile group: "org.bukkit", name: "bukkit", version: "1.12.2-R0.1-SNAPSHOT"
        testCompile group: 'junit', name: 'junit', version:'4.12'
        testCompile group: 'org.powermock', name: 'powermock-module-junit4', version:'1.6.1'
        testCompile group: 'org.powermock', name: 'powermock-api-easymock', version:'1.6.1'
        testCompile group: 'org.powermock', name: 'powermock-api-mockito', version:'1.6.1'
        testCompile group: 'org.easymock', name: 'easymock', version:'3.4'
        testCompile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier 'sources'
        from sourceSets.main.allSource
        from "${project.rootDir}/LICENSE.txt"
    }

    //    if (project.hasProperty('mavenUser') && project.hasProperty('mavenPassword')) {
    //        uploadArchives {
    //            repositories {
    //                mavenDeployer {
    //                    repository(url: "http://repo.onarandombox.com/content/repositories/thirdparty/") {
    //                        authentication(userName: mavenUser, password: mavenPassword)
    //                    }
    //                    snapshotRepository(url: "http://repo.onarandombox.com/content/repositories/thirdparty-dev/") {
    //                        authentication(userName: mavenUser, password: mavenPassword)
    //                    }
    //                }
    //            }
    //        }
    //    }

    //    license {
    //        header rootProject.file("license/MIT_HEADER.txt")
    //        include '**/*.kt'
    //        include '**/*.java'
    //        newLine false
    //    }

    artifacts {
        archives sourcesJar
    }
}